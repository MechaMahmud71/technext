{"version":3,"sources":["components/UserTable.jsx","components/Pagination.jsx","components/Users.jsx","components/Post.jsx","api/getPost.js","components/Dashboard.jsx","components/Comment.jsx","components/FullPost.jsx","components/Nav.jsx","components/Profile.jsx","components/AddPost.jsx","reducers/Reducer.js","App.jsx","reportWebVitals.js","index.js"],"names":["UserTable","user","id","className","to","name","email","website","Pagination","usersPerPage","totalPosts","paginate","page","pageNumbers","i","Math","ceil","push","map","number","onClick","Users","useState","users","setUsers","sort","setSort","currentPage","setCurrentPage","setusersPerPage","searchString","setSearchString","loading","setLoading","useEffect","getUsers","getItems","setItem","localStorage","localSort","getItem","localCurrentPage","localUserPerPage","localSearchString","a","axios","get","data","toast","error","sortedUsers","filter","el","value","nameFilter","toLowerCase","includes","emailFilter","websiteFilter","slice","b","x","y","indexOfLastPost","indexOfFirstPost","userDOM","index","type","onChange","e","target","placeholder","length","pageNumber","Post","fullPost","useParams","profile","useContext","ProfileContext","deletePost","delete","success","title","body","userId","getPosts","URL","console","log","getPost","Dashboard","posts","setPosts","visible","setVisible","getAllPosts","userPosts","mappedPost","style","fontSize","previousValue","Comment","FullPost","post","setPost","comment","setComment","getSinglePost","getCommnet","singlePost","comments","Nav","exact","activeClassName","Profile","setPorfile","getUserPosts","getUserProfile","phone","AddPost","formData","setFormData","handelChange","submitPost","editPost","put","initialState","reducer","state","action","payload","React","createContext","App","useReducer","dispatch","getProfile","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64d587cc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"../styles/Users.scss\";\r\n\r\nconst UserTable = ({user,id}) => {\r\n  return (\r\n    <>\r\n      <tbody>\r\n          <tr>\r\n            <td>\r\n              <Link className=\"user-name-link\" to={`/user/${id}`}>{user.name}</Link>\r\n            </td>\r\n            <td>{user.email}</td>\r\n            <td>{user.website}</td>\r\n          </tr>\r\n        </tbody>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserTable\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport \"../styles/Pagination.scss\";\r\n\r\nconst Pagination = ({ usersPerPage, totalPosts, paginate,page,id }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / usersPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  \r\n  return (\r\n    <nav className=\"pagination-container\">\r\n      <ul className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            {page===\"profile\"?(\r\n              <NavLink onClick={() => paginate(number)} to={`/user/${id}`} className='page-link'>\r\n                {number}\r\n              </NavLink>\r\n            ):(\r\n              <NavLink onClick={() => paginate(number)} to='/users' className='page-link'>\r\n                {number}\r\n              </NavLink>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, { useEffect, useState } from 'react';\r\nimport UserTable from './UserTable';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Pagination from './Pagination';\r\nimport \"../styles/Users.scss\";\r\n\r\nconst Users=()=> {\r\n  \r\n  let [users,setUsers]=useState([]);\r\n  let [sort,setSort]=useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [usersPerPage,setusersPerPage] = useState(3);\r\n  const [searchString,setSearchString]=useState(\"\");\r\n  const [loading,setLoading]=useState(true);\r\n\r\n  \r\n  useEffect(()=>{\r\n    getUsers();\r\n  },[])\r\n\r\n  \r\n  useEffect(()=>{\r\n    getItems();\r\n  },[])\r\n  \r\n  useEffect(()=>{\r\n    setItem();\r\n  })\r\n\r\n  \r\n  const setItem=()=>{\r\n    localStorage.setItem(\"currentPage\",currentPage);\r\n    localStorage.setItem(\"usersPerPage\",usersPerPage);\r\n    localStorage.setItem(\"searchString\",searchString);\r\n    localStorage.setItem(\"sort\",sort);\r\n  }\r\n\r\n  const getItems=()=>{\r\n    \r\n    const localSort=localStorage.getItem('sort');\r\n    const localCurrentPage= localStorage.getItem(\"currentPage\");\r\n    const localUserPerPage=localStorage.getItem(\"usersPerPage\");\r\n    const localSearchString=localStorage.getItem('searchString');\r\n    if(localSort ||localCurrentPage||localUserPerPage||localSearchString){\r\n      setSort(localSort);\r\n      setCurrentPage(localCurrentPage);\r\n      setusersPerPage(localUserPerPage);\r\n      setSearchString(localSearchString);\r\n    }\r\n    else{\r\n      setSort(\"\");\r\n      setCurrentPage(1);\r\n      setusersPerPage(3);\r\n      setSearchString(\"\");\r\n    }\r\n    \r\n  }\r\n  \r\n  \r\n  const getUsers=async()=>{\r\n    try {\r\n      const {data}=await axios.get('https://jsonplaceholder.typicode.com/users');\r\n      setUsers(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast.error(\"Sorry! Users are not fetched\")\r\n    }\r\n  }\r\n\r\n  const getSort=(e)=>{\r\n    \r\n    setSort(e.target.value)\r\n  \r\n  }\r\n\r\n  const setPagination=(e)=>{\r\n    setusersPerPage(e.target.value)\r\n  }\r\n\r\n  const search=(e)=>{\r\n    setSearchString(e.target.value);\r\n    \r\n  }\r\n\r\n\r\n   users=users.filter((el)=>{\r\n    let value;\r\n    let nameFilter=el.name.toLowerCase().includes(searchString.toLowerCase());\r\n    let emailFilter=el.email.toLowerCase().includes(searchString.toLowerCase());\r\n    let websiteFilter=el.website.toLowerCase().includes(searchString.toLowerCase())\r\n    if(searchString===\"\"){\r\n      value= el;\r\n    }\r\n    else if(nameFilter||emailFilter||websiteFilter){\r\n      value=el;\r\n    }\r\n    return value;\r\n  })\r\n\r\n\r\n  let sortedUsers = users.slice(0);\r\n  \r\n  sortedUsers.sort(function(a,b) {\r\n      let x,y\r\n      if(sort==='asc'){\r\n        x = a.name.toLowerCase();\r\n        y = b.name.toLowerCase();\r\n      }\r\n      if(sort===\"dsc\"){\r\n        x = a.email.toLowerCase();\r\n        y = b.email.toLowerCase();\r\n      }\r\n    \r\n      return x < y ? -1 : x > y ? 1 : 0;\r\n    });\r\n\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n  \r\n  \r\n  \r\n  const indexOfLastPost = currentPage * usersPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - usersPerPage;\r\n  const currentUsers = sortedUsers.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  \r\n  const userDOM=currentUsers.map((el,index)=><UserTable user={el} key={index+1} id={el.id}/>)\r\n  \r\n  if(loading){\r\n    return(\r\n      <div className=\"loading-container\">\r\n        <div className=\"loader\"></div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"users-container\">\r\n        <input type=\"text\" onChange={search} value={searchString}  className=\"search-input\" placeholder=\"Search Users By Name, Email, Website...\"/>\r\n        <ToastContainer/>\r\n        <div className=\"select-divs\">\r\n          <h1 className=\"sort-title\">Sort Table</h1>\r\n          <select value={sort} onChange={getSort}>\r\n            <option value=\"normal\">Normal</option>\r\n            <option value=\"asc\" >Asceding</option>\r\n            <option value=\"dsc\">Dscending</option>\r\n          </select>\r\n          <h1 className=\"sort-title\">Users Per Page</h1>\r\n          <select value={usersPerPage} onChange={setPagination}>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"5\">5</option>\r\n            <option value=\"10\">All</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <table className=\"user-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th> \r\n            <th>Website</th>\r\n          </tr>\r\n        </thead>\r\n        {userDOM}\r\n      </table>\r\n      <Pagination\r\n        usersPerPage={usersPerPage}\r\n        totalPosts={users.length}\r\n        paginate={paginate}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import axios from 'axios';\r\nimport React,{useContext} from 'react'\r\nimport {Link,useParams} from \"react-router-dom\";\r\nimport {toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {ProfileContext} from \"../App\";\r\nimport \"../styles/Post.scss\";\r\n\r\nconst Post=({value,fullPost})=> {\r\n  const {id}=useParams();\r\n  const profile=useContext(ProfileContext);\r\n  \r\n  const deletePost=async()=>{\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/posts/${id}`)\r\n      \r\n      toast.success(\"The Post is deleted\");\r\n    } catch (error) {\r\n      toast.error(\"Sorry! The post is not deleted\");\r\n    }\r\n  }\r\n  \r\n  return (\r\n\r\n    <div className=\"post-container\">\r\n      \r\n      <h1 className=\"post-title\">{value.title}</h1>\r\n      <p className=\"post-body\">{value.body}</p>\r\n      \r\n      {fullPost? null:\r\n       (\r\n        <div className=\"link-container\">\r\n       <Link className=\"post-details-link\" to={`/post/${value.id}`}>See Details</Link>\r\n        </div>\r\n       )}\r\n        {profile.id===value.userId?(\r\n        <div className=\"edit-delete-container\">\r\n          <Link className=\"post-edit-link\" to={`/edit-post/${value.id}`}><i className=\"fas fa-edit\"></i></Link>\r\n          <button onClick={deletePost} className=\"btn-delete-btn\"><i className=\"far fa-trash-alt\"></i></button>\r\n        </div>\r\n      ):null}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import axios from \"axios\";\r\n\r\nexport const getPosts=async(URL)=>{\r\n  try {\r\n    const {data}= await axios.get(URL);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error in fetching data\")\r\n  }\r\n}\r\n\r\nexport const getPost=async(id)=>{\r\n  try {\r\n    const {data}=await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`)\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}","import React, { useState,useEffect } from 'react';\r\nimport Post from './Post';\r\nimport \"../styles/Dashboard.scss\"\r\nimport { getPosts } from '../api/getPost';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Dashboard=()=> {\r\n  \r\n  const [posts,setPosts]=useState([]);\r\n  const [visible,setVisible]=useState(10);\r\n  const [loading,setLoading]=useState(true);\r\n  \r\n  const URL='https://jsonplaceholder.typicode.com/posts';\r\n  \r\n  useEffect(()=>{\r\n    getAllPosts();\r\n    \r\n  },[])\r\n\r\n  const getAllPosts=async()=>{\r\n    try {\r\n      const userPosts=await getPosts(URL);\r\n      setPosts(userPosts);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast.error(\"Sorry! Posts can not be fetched!\")\r\n    }\r\n  }\r\n  \r\n  const loadMore=()=>{\r\n    setVisible((previousValue)=>previousValue+10)\r\n  }\r\n\r\n  if(loading){\r\n    return(\r\n      <div className=\"loading-container\">\r\n        <div className=\"loader\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const mappedPost=posts.slice(0,visible).map((el,index)=><Post value={el} key={index+1}/>)\r\n  \r\n  \r\n  return (\r\n    <div className=\"dashboard\">\r\n      <ToastContainer style={{fontSize:\"1.5rem\"}}/>\r\n      <div className=\"container\">\r\n        {mappedPost}\r\n        <div className=\"loadmore-btn-container\">\r\n        <button className=\"btn-loadMore\" onClick={loadMore}>Load More</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react';\r\nimport \"../styles/Comments.scss\";\r\n\r\nconst Comment=({value})=> {\r\n  return (\r\n    <div className=\"comment-container\">\r\n      <div className=\"user-email\">{value.email}</div>\r\n      <div className=\"user-comment\">{value.body}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comment;\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport Post from './Post';\r\nimport Comment from './Comment';\r\nimport {getPost} from \"../api/getPost\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst FullPost=()=> {\r\n  const {id}=useParams();\r\n  const [post,setPost]=useState({});\r\n  const [comment,setComment]=useState([]);\r\n  const [loading,setLoading]=useState(true);\r\n  \r\n  useEffect(()=>{\r\n    getSinglePost(id);\r\n    getCommnet(id);\r\n  },[id])\r\n\r\n  const getSinglePost=async(id)=>{\r\n    const singlePost=await getPost(id);\r\n    setLoading(false);\r\n    setPost(singlePost);\r\n  }\r\n\r\n  const getCommnet=async(id)=>{\r\n    try {\r\n      const {data}= await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${id}`);\r\n      setComment(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast.error(\"Sorry! Comments can not be fetched!\")\r\n    }\r\n  }\r\n  \r\n  const comments=comment.map((el,index)=><Comment value={el} key={index}/>)\r\n\r\n  if(loading){\r\n    return(\r\n      <div className=\"loading-container\">\r\n        <div className=\"loader\"></div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <ToastContainer style={{fontSize:\"1.5rem\"}}/>\r\n      <Post fullPost={true} value={post}/>\r\n      <h1 className=\"comment-heading\">Comments</h1>\r\n      {comments}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FullPost;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport \"../styles/Nav.scss\";\r\n\r\n\r\nconst Nav=()=> {\r\n  return (\r\n    <div className=\"nav-container\">\r\n      \r\n        <NavLink className=\"nav-link\" exact activeClassName=\"nav-link-active\" to=\"/\"><i className=\"fas fa-home\"></i></NavLink>\r\n      \r\n      \r\n        <NavLink className=\"nav-link\" exact activeClassName=\"nav-link-active\" to=\"/profile\"><i className=\"fas fa-user-circle\"></i></NavLink>\r\n      \r\n      \r\n        <NavLink className=\"nav-link\" exact activeClassName=\"nav-link-active\" to=\"/add-post\"><i className=\"fas fa-pen-square\"></i></NavLink>\r\n      \r\n      \r\n        <NavLink className=\"nav-link\" exact activeClassName=\"nav-link-active\" to=\"/users\"><i className=\"fas fa-users\"></i></NavLink>\r\n      \r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import React,{useEffect,useState} from 'react';\r\nimport Post from './Post';\r\nimport { getPosts } from '../api/getPost';\r\nimport Pagination from './Pagination';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"../styles/Profile.scss\";\r\n\r\n const Profile = () => {\r\n  \r\n  let [posts,setPosts]=useState([]);\r\n  let {id}=useParams();\r\n  const [loading,setLoading]=useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const postsPerPage=3;\r\n  let[profile,setPorfile]=useState({});\r\n  \r\n\r\n  id=id?id:2;\r\n\r\n  let URL=`https://jsonplaceholder.typicode.com/users/${id}/posts`;\r\n  \r\n  const getUserPosts=async(URL)=>{\r\n    const userPosts=await getPosts(URL);\r\n    setPosts(userPosts)\r\n    setLoading(false)\r\n  }\r\n\r\n  const getUserProfile=async(id)=>{\r\n    try {\r\n      const {data}=await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      // console.log(data)\r\n      setLoading(false);\r\n      setPorfile(data)\r\n    } catch (error) {\r\n      toast.error(\"Sorrt! Porfile is not fetched\");\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getUserPosts(URL);\r\n    getUserProfile(id);\r\n    \r\n  },[URL,id])\r\n  \r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n  \r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  let currentPosts =posts.slice(indexOfFirstPost, indexOfLastPost);\r\n  \r\n  \r\n  const mappedPost=currentPosts.map((el,index)=><Post value={el} key={index+1}/>)\r\n  \r\n  if(loading){\r\n    return(\r\n      <div className=\"loading-container\">\r\n        <div className=\"loader\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer style={{fontSize:\"1.5rem\"}}/>\r\n      <div className=\"profile-container\">\r\n        <div className=\"profile-hero\">\r\n          <div className=\"upper\">\r\n            <p className=\"profile-name\">\r\n              {profile.name}\r\n            </p>\r\n          </div>\r\n          <div className=\"lower\">\r\n            <p className=\"profile-email\"><i className=\"fas fa-envelope\"></i><span className=\"span-text\">{profile.email}</span></p>\r\n            <p className=\"profile-phone\"><i className=\"fas fa-phone-square\"></i><span className=\"span-text\">{profile.phone}</span></p>\r\n            <p className=\"profile-website\"><i className=\"fas fa-globe-americas\"></i><span className=\"span-text\">{profile.website}</span></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {mappedPost}\r\n      <Pagination\r\n        usersPerPage={postsPerPage}\r\n        totalPosts={posts.length}\r\n        paginate={paginate}\r\n        page={\"profile\"}\r\n        id={id}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {getPost} from \"../api/getPost\";\r\nimport \"../styles/AddPost.scss\";\r\n\r\nconst AddPost = () => {\r\n  \r\n  const {id}=useParams();\r\n  \r\n  const [formData,setFormData]=useState({\r\n    id:0,\r\n    title:\"\",\r\n    body:\"\",\r\n    userId:2\r\n  })\r\n  \r\n  const { title,body  } = formData;\r\n\r\n\r\n  const handelChange = (e) => {\r\n\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    if(id){\r\n      getSinglePost(id);\r\n    }\r\n  },[id])\r\n\r\n  const getSinglePost=async(id)=>{\r\n    const singlePost=await getPost(id);\r\n    setFormData({\r\n      id:singlePost.id,\r\n      title:singlePost.title,\r\n      body:singlePost.body,\r\n      userId:2\r\n    })\r\n  }\r\n\r\n  const submitPost=async()=>{\r\n    try {\r\n      await axios.post('https://jsonplaceholder.typicode.com/posts',formData);\r\n      \r\n      setFormData({\r\n        id:0,\r\n        title:\"\",\r\n        body:\"\",\r\n        userId:2\r\n      })\r\n      toast.success(\"Post is added\");  \r\n\r\n    } catch (error) {\r\n      toast.error(\"Sorry!The post is not added\")\r\n    }\r\n  }\r\n\r\n  const editPost=async()=>{\r\n    try {\r\n      await axios.put(`https://jsonplaceholder.typicode.com/posts/${id}`,formData);\r\n      toast.success(\"Post is updated\");\r\n    } catch (error) {\r\n      toast.error(\"Sorry!The post is not updated\")\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"add-post-container\">\r\n      \r\n      <ToastContainer style={{fontSize:\"1.5rem\"}}/>\r\n      <textarea name=\"title\" className=\"title-textarea\" onChange={handelChange} value={title} placeholder=\"Title..\"></textarea>\r\n      <textarea name=\"body\" className=\"body-textarea\" onChange={handelChange} value={body} placeholder=\"Whats on your MIND....\"></textarea>\r\n      {id?(\r\n        <button className=\"btn-sumbit-post\" onClick={editPost}>Edit Post</button>\r\n      ):(\r\n        <button className=\"btn-sumbit-post\" onClick={submitPost}>Add Post</button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddPost\r\n","export const initialState = {\r\n\tloading: true,\r\n\terror: '',\r\n\tprofile: {}\r\n}\r\n\r\n\r\nexport const reducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'FETCH_SUCCESS':\r\n      // console.log(action.payload)\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tprofile: action.payload,\r\n\t\t\t\terror: ''\r\n\t\t\t}\r\n\t\tcase 'FETCH_ERROR':\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tprofile:{},\r\n\t\t\t\terror: 'Something went wrong!'\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import React from 'react';\nimport Users from './components/Users';\nimport Dashboard from './components/Dashboard';\nimport FullPost from './components/FullPost';\nimport Nav from \"./components/Nav\";\nimport Profile from './components/Profile';\nimport AddPost from './components/AddPost';\n\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\nimport {useEffect,useReducer,useState } from 'react';\nimport axios from \"axios\";\n\nimport \"./App.scss\";\nimport { initialState,reducer } from './reducers/Reducer';\n\n\nexport const ProfileContext=React.createContext();\n\nfunction App() {\n  \n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [loading,setLoading]=useState(true);\n  \n  useEffect(()=>{\n    getProfile();\n  },[])\n\n\n  \n\n  const getProfile=async()=>{\n    try {\n      const {data}= await axios.get(`https://jsonplaceholder.typicode.com/users/2`);\n      setLoading(false);\n      dispatch({type:\"FETCH_SUCCESS\",payload:data})\n    } catch (error) {\n      setLoading(true);\n      dispatch({ type: 'FETCH_ERROR' })\n    }\n  }\n\n  if(loading){\n    return(\n      <div className=\"loading-container\">\n        <div className=\"loader\"></div>\n      </div>\n    )\n  }\n\n \n  return (\n    <div className=\"App\">\n      \n      <ProfileContext.Provider value={state.profile}>\n        \n          <Router>\n            <Nav/>\n            \n            <Switch>\n              <Route exact path=\"/\">\n                <Dashboard/>\n              </Route>\n              <Route exact path=\"/users\">\n                <Users/>\n              </Route>\n              <Route exact path=\"/post/:id\">\n                <FullPost/>\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile/>\n              </Route>\n              <Route exact path=\"/user/:id\">\n                <Profile/>\n              </Route>\n              <Route exact path=\"/add-post\">\n                <AddPost/>\n              </Route>\n              <Route exact path=\"/edit-post/:id\">\n                <AddPost/>\n              </Route>\n              \n            </Switch>\n            \n          </Router>\n        \n      </ProfileContext.Provider>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}